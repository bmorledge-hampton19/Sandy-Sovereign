package sandySovereign;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import sandySovereign.Stockpile.Resource;

public class StatisticsViewer extends Menu implements ActionListener{

	/**
	 * This menu allows the user to see specifics on each of their resources.
	 * @param scaleFactor specifies the factor by which to scale the UI.
	 * @param manager specifies the manager that the menu will refer back to.
	 */
	public StatisticsViewer(double scaleFactor, Manager manager) {
		super(scaleFactor, manager);
		
		// The button to go back to the event viewer.
		addButton(700,700, "Back");
		
		repaint();
		
	}
	
	@Override
	public void paintComponent(Graphics g) {
		
		// Get the stockpile.  You'll need it!
		Stockpile s = manager.getStockpile();
		
		// Display headers.
		displayText(g, 275, 30, "Statistics", 40);
		
		displayText(g, 10, 100, "Resources:", 20);
		displayText(g, 100, 100, "Value/Max (+Income)", 20);
		
		displayText(g, 310, 100, "Status of the People:", 20);
		
		displayText(g, 510, 100, "Status of Defenses:", 20);
		
		displayText(g, 710, 100, "Special Resources:", 20);
		
		// Display info on resources with income values.
		int i = 0;
		for (Resource r : Resource.values()) {
			// Get only the resources with fixed income.
			if (r != Resource.CLAMSHELLS && r != Resource.SANDDOLLARS && r != Resource.HAPPINESS && r != Resource.POPULATION &&
					r != Resource.MOAT && r != Resource.WALLS && r != Resource.PALISADES) {
				
				i++;
				
				// Turn the information about the resource into a String.
				String resourceInfo = String.format("%s:    %d/%d (+%d)" , r.toString(),
						s.getResourceValue(r), s.getResourceMax(r), s.getResourceIncome(r));
				
				// Display that string in a nice looking spot.
				displayText(g, 10, 150 + i*50, resourceInfo, 12);
				
			}
			
		}
		
		// Display info on the population.
		displayText(g, 310, 150, String.format("Population:    %d/%d (+%d)", s.getResourceValue(Resource.POPULATION), 
				s.getResourceMax(Resource.POPULATION), s.getResourceIncome(Resource.POPULATION)), 12);
		displayText(g, 310, 200, String.format("Happiness: %d%", s.getResourceValue(Resource.HAPPINESS)), 12);
		
		// Display info on defenses.
		displayText(g, 510, 150, String.format("Walls:    %d/%d", 
				s.getResourceValue(Resource.WALLS), s.getResourceMax(Resource.WALLS)), 12);
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}

}
